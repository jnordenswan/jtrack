#!/usr/bin/env python
"""
JTrack personal planner

Usage:
  jt node new <type> <data> <comment> [-p <parent>...] [-c <child>...] [-r]
  jt node view <id>
  jt node edit <id> <data> -ap <parent> -dp <parent> -ac <child> -dc <child> [-r]
  jt node delete <id>
  jt comm view
  jt comm push
  jt comm delete
  jt comm drop <id>
  jt comm pass <id>
  jt comm fail <id>
  jt cal <start> [<end>]
  jt roots
  jt db <path>
"""
from lib.docopt import docopt
from lib import controller
from os.path import realpath
from sqlite3 import connect

db_path = '/home/johan/media/code/jtrack/data/johan.db'

def print_usage_and_fail():
    print(__doc__)
    exit(2)

def set_db(path):
    path = realpath(path)
    lines = open(realpath(__file__)).read().split('\n')
    for l in lines:
        if l.startswith('db_path ='):
            i = lines.index(l)
            lines[i] = "db_path = '%s'" % path
            new = '\n'.join(lines)
            f = open(realpath(__file__), 'w')
            f.write(new)
            f.close()
            break

if __name__ == '__main__':
    args = docopt(__doc__)
    if args['db']: set_db(args['<path>'])
    else:
        controller.conn = connect(db_path)
        controller.conn.execute("PRAGMA foreign_keys = ON;")
    if args['node']:
        if args['new']: controller.new_node(args['<type>'], args['<data>'], args['<comment>'], args['<parent>'], args['<child>'])
        elif args['view']: controller.view_node(args['<id>'])
        elif args['edit']: controller.edit_node(args['<id>'], args['<data>'], args[''])  # TODO: Finish this line
        elif args['delete']: controller.delete_node(args['<id>'])
        else: print_usage_and_fail()
    elif args['comm']:
        if args['view']: controller.view_commitment()
        elif args['push']: controller.push_commitment()
        elif args['drop']: controller.drop_commitlet(args['<id>'])
        elif args['pass']: controller.pass_commitlet(args['<id>'])
        elif args[fail]: controller.fail_commitlet(args['<id>'])
        else: print_usage_and_fail()
    elif args['cal']: controller.print_calendar(args['<start>'], args['<end>'])
    elif args['roots']: controller.print_roots()
    else: print_usage_and_fail()